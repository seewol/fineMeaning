<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fin.proj.member.model.dao.MemberDAO">
	
	<select id="login" resultMap="memberResultSet">
		select *
		from USER
		where u_id = #{uId} and u_status = 'Y'
	</select>
	
	<resultMap type="Member" id="memberResultSet">
		<id column="U_NO" property="uNo" />		
		<result column="U_ID" property="uId" />
		<result column="U_PWD" property="uPwd" />
		<result column="U_NAME" property="uName" />
		<result column="RESIDENT_NO" property="residentNo" />
		<result column="ADDRESS" property="address" />
		<result column="PHONE" property="phone" />
		<result column="EMAIL" property="email" />
		<result column="U_NICKNAME" property="uNickName" />
		<result column="LOGIN_TYPE" property="loginType" />
		<result column="KAKAO_ID" property="kakaoId" />
		<result column="U_STATUS" property="uStatus" />
		<result column="U_TYPE" property="uType" />
		<result column="REGISTRAR" property="registrar" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="IS_ADMIN" property="isAdmin" />
	</resultMap>
	
	<insert id="insertUser">
		insert into USER(U_ID, U_PWD, U_NAME, RESIDENT_NO, ADDRESS, PHONE, EMAIL, U_NICKNAME, LOGIN_TYPE, KAKAO_ID, U_STATUS, U_TYPE, REGISTRAR, ENROLL_DATE, IS_ADMIN)
		values(#{uId}, #{uPwd}, #{uName}, #{residentNo}, #{address}, #{phone}, #{email},
				#{uNickName}, default, null, default, #{uType}, #{registrar}, default, default)
	</insert>
	
	<select id="checkId" resultType="_int">
		select count(*)
		from USER
		where u_id = #{uId}
	</select>
	
	<select id="checkLogin" resultType="_int">
		select count(*)
		from USER
		where u_id = #{uId} and u_status = 'Y'
	</select>
	
	<select id="checkNickName" resultType="_int">
		select count(*)
		from USER
		where u_NickName = #{uNickName}
	</select>
	
	<update id="updateMyInfo">
		update USER
		set u_name = #{uName}, u_type = #{uType}, registrar = #{registrar}, address = #{address, jdbcType=VARCHAR},
		    phone = #{phone, jdbcType=VARCHAR}, email = #{email, jdbcType=VARCHAR}, u_nickname = #{uNickName}
		where u_no = #{uNo}
	</update>
	
	<update id="deleteUser">
		update USER
		set u_status = 'N'
		where u_no = #{uNo}
	</update>
	
	<select id="checkNickNameModify" resultType="_int">
	<![CDATA[
		select count(*)
		from USER
		where u_nickname = #{uNickName} AND u_no <> #{uNo}
	]]>
	</select>
	
	<update id="updatePwd">
		update USER
		set u_pwd = #{newPwd}
		where u_id = #{uId}
	</update>
	
	<select id="selectPwd" resultMap="memberResultSet">
		select u_pwd
		from USER
		where u_id = #{uId}
	</select>
	
	<select id="searchEmailUser" resultType="_int">
		select count(*)
		from USER
		where u_name = #{uName} and email = #{email} and u_status = 'Y' and login_type = '일반'
	</select>
	
	<select id="searchUser" resultMap="memberResultSet">
		select *
		from USER
		where (u_name = #{uName} and email = #{email} and u_status = 'Y' and login_type = '일반') or (u_name = #{uName} and phone = #{phone} and u_status = 'Y' and login_type = '일반')
	</select>
	
	<select id="searchEmailUser2" resultType="_int">
		select count(*)
		from USER
		where u_id = #{uId} and email = #{email} and u_status = 'Y' and login_type = '일반'
	</select>
	
	<select id="searchUserPwd" resultMap="memberResultSet">
		select *
		from USER
		where (u_id = #{uId} and email = #{email} and u_status = 'Y' and login_type = '일반') or (u_id = #{uId} and phone = #{phone} and u_status = 'Y' and login_type = '일반')
	</select>
	
	<select id="searchPhoneUser" resultType="_int">
		select count(*)
		from USER
		where u_name = #{uName} and phone = #{phone} and u_status = 'Y' and login_type = '일반'
	</select>
	
	<select id="searchPhoneUser2" resultType="_int">
		select count(*)
		from USER
		where u_id = #{uId} and phone = #{phone} and u_status = 'Y' and login_type = '일반'
	</select>
	
	<select id="getListCount" resultType="_int">
		select count(*)
		from USER
	</select>
	
	<select id="selectUserList" resultMap="memberResultSet">
	  select *
	  from USER
	  order by u_no desc
	</select>
	
	<select id="getUserListCount" resultType="_int">
		select count(*)
		from USER
		where u_no = #{uNo}
	</select>
	
	<select id="selectUserListEach" resultMap="memberResultSet">
		select *
		from USER
		where u_no = #{uNo}
	</select>
	
	<select id="statusUserList" resultMap="memberResultSet">
		select *
		from USER
		where u_status = 'Y'
		order by u_no desc	
	</select>
	
	<select id="getCategoryCount" resultType="_int">
		<if test="category == '전체'">
			select count(*)
			from USER
			<if test="searchWord != null and searchWord != ''">
			where u_id like '%${searchWord}%'
			</if>
		</if>
		<if test="category == '활동중인 회원'">
			select count(*)
			from USER
			where u_status = 'Y'
			<if test="searchWord != null and searchWord != ''">
			and u_id like '%${searchWord}%'
			</if>
		</if>
		<if test="category == '관리자인 회원'">
			select count(*)
			from USER
			where (is_admin = '0' or is_admin = '2')
			<if test="searchWord != null and searchWord != ''">
			and u_id like '%${searchWord}%'
			</if>
		</if>
		<if test="category == '미승인 기관'">
			select count(*)
			from USER
			where (u_type = '단체' and is_admin = '1')
			<if test="searchWord != null and searchWord != ''">
			and u_id like '%${searchWord}%'
			</if>
		</if>
	</select>
	
	<select id="selectCategoryListAdmin" resultMap="memberResultSet">
		<if test="category == '전체'">
			select *
			from USER
			<if test="searchWord != null and searchWord != ''">
			where u_id like '%${searchWord}%'
			</if>
			order by u_no desc
		</if>
		<if test="category == '활동중인 회원'">
			select *
			from USER
			where u_status = 'Y'
			<if test="searchWord != null and searchWord != ''">
			and u_id like '%${searchWord}%'
			</if>
			order by u_no desc
		</if>
		<if test="category == '관리자인 회원'">
			select *
			from USER
			where (is_admin = '0' or is_admin = '2')
			<if test="searchWord != null and searchWord != ''">
			and u_id like '%${searchWord}%'
			</if>
			order by u_no desc
		</if>
		<if test="category == '미승인 기관'">
			select *
			from USER
			where (u_type = '단체' and is_admin = '1')
			<if test="searchWord != null and searchWord != ''">
			and u_id like '%${searchWord}%'
			</if>
			order by u_no desc
		</if>
	</select>
	
	<select id="kakaoLogin" resultMap="memberResultSet">
		select *
		from USER
		where kakao_id = #{kakaoId} and u_status = 'Y'
	</select>
	
	<insert id="kakaoEnroll">
		insert into USER(U_ID, U_PWD, U_NAME, RESIDENT_NO, ADDRESS, PHONE, EMAIL, U_NICKNAME, LOGIN_TYPE, KAKAO_ID, U_STATUS, U_TYPE, REGISTRAR, ENROLL_DATE, IS_ADMIN)
		values(null, null, #{uName}, #{residentNo}, null, null, #{email},
				#{uNickName}, '카카오', #{kakaoId}, default, #{uType}, #{registrar}, default, default)
	</insert>
	
	<select id="checkEmail" resultType="_int">
		select count(*)
		from USER
		where email = #{emailAddress} and u_status = 'Y' and login_type = '일반'
	</select>
	
	<select id="getSearchListCount">
		select count(*)
		from USER
		where u_id like '%${searchWord}%'
	</select>
	
	<select id="selectSearchListAdmin" resultMap="memberResultSet">
		select *
		from USER
		where u_id like '%${searchWord}%'
	</select>
	
	<update id="updateUserInfo">
		update USER
		set ${column} = #{data}
		<if test="column == 'u_type' and data == '일반'">
		, registrar = null
		</if>
		where u_no = #{uNo} 
	</update>
	
	<update id="updateState">
		update USER
		set u_status = #{status}
		where u_no = #{uNo} 
	</update>
</mapper>